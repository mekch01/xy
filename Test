// newCasePage.ts
import { Page } from '@playwright/test';

export class NewCasePage {
  readonly page: Page;

  constructor(page: Page) {
    this.page = page;
  }

  // Verify the page title contains "New Case"
  async verifyPageTitle(): Promise<boolean> {
    await this.page.waitForLoadState('domcontentloaded');
    return await this.page.title().then(title => title.includes('New Case'));
  }

  // Fetch field values
  async fetchFieldValues(): Promise<Record<string, string>> {
    await this.page.waitForLoadState('domcontentloaded');

    const title = await this.page.locator('input[aria-label="Title"]').inputValue();
    const description = await this.page.locator('textarea[aria-label="Description"]').inputValue();
    const contact = await this.page.locator('input[aria-label="Contact"]').inputValue();
    const commentsDescription = await this.page.locator('textarea[aria-label="Comments / Description"]').inputValue();
    const quickCode = await this.page.locator('input[aria-label="Quick Code"]').inputValue();
    const category = await this.page.locator('input[aria-label="Category"]').inputValue();
    const type = await this.page.locator('input[aria-label="Type"]').inputValue();
    const detail = await this.page.locator('input[aria-label="Detail"]').inputValue();
    const riskLevel = await this.page.locator('input[aria-label="Risk Level"]').inputValue();
    const validatedBy = await this.page.locator('input[aria-label="Validated By"]').inputValue();
    const origin = await this.page.locator('input[aria-label="Origin"]').inputValue();
    const method = await this.page.locator('input[aria-label="Method"]').inputValue();
    const method2 = await this.page.locator('input[aria-label="Method 2"]').inputValue();
    const resultStatus = await this.page.locator('input[aria-label="Result\\Status"]').inputValue();

    return {
      title,
      description,
      contact,
      commentsDescription,
      quickCode,
      category,
      type,
      detail,
      riskLevel,
      validatedBy,
      origin,
      method,
      method2,
      resultStatus,
    };
  }
}
