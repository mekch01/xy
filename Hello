// serviceViewSidebarPage.ts
import { Page } from '@playwright/test';

export class ServiceViewSidebarPage {
  readonly page: Page;
  readonly sidebar: Locator;
  readonly menuItems: Locator;

  constructor(page: Page) {
    this.page = page;
    this.sidebar = page.locator('.side-nav'); // Adjust selector based on actual HTML
    this.menuItems = this.sidebar.locator('li'); // Adjust selector based on actual HTML
  }

  // Get specific menu item by name
  getMenuItem = (name: string) => 
    this.menuItems.filter({ hasText: name });

  // Get all menu items
  async getAllMenuItems() {
    const items = await this.menuItems.all();
    return items.map(item => item.textContent());
  }

  // Click on a specific menu item
  async clickMenuItem(name: string) {
    await this.getMenuItem(name).click();
    await this.page.waitForLoadState('domcontentloaded');
  }

  // Verify menu item exists
  async verifyMenuItemExists(name: string) {
    await this.getMenuItem(name).waitFor({ state: 'attached' });
    return true;
  }

  // Verify all expected menu items exist
  async verifyAllMenuItemsExist(expectedItems: string[]) {
    const actualItems = await this.getAllMenuItems();
    const missingItems = expectedItems.filter(item => !actualItems.includes(item));
    return missingItems.length === 0;
  }
}
