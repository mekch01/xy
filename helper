// Core reusable validation function
async function validateSectorsDiscussedRequirement(executionContext) {
    const formContext = executionContext.getFormContext();
    const activityType = formContext.getAttribute("cib_activity_type")?.getValue();
    const phoneId = formContext.data.entity.getId()?.replace(/[{}]/g, "");

    if (!phoneId || activityType !== Cib.PhoneCallConstants.CIB_ACTIVITY_TYPE_EQUITY)
        return { isValid: true };

    try {
        // Fetch all tickers discussed for this phone call
        const result = await CibHelper.Util.buildFetchXml(
            "cib_tickers_discussed",
            ["cib_reference_master_ticker_id", "cib_name"],
            [{ attribute: "cib_phone_call", operator: "eq", value: phoneId }]
        );

        let hasNoneTicker = false;

        if (result?.entities?.length) {
            hasNoneTicker = result.entities.some(entity => {
                const tickerValue = entity["cib_reference_master_ticker_id"]?.Name?.toLowerCase() || "";
                return tickerValue === "none";
            });
        }

        // If "None" is selected, Sectors Discussed must be filled
        if (hasNoneTicker) {
            const sectorsControl = formContext.getControl("cib_sectors_discussed");

            if (!sectorsControl) {
                console.warn("Sectors Discussed subgrid not found.");
                return { isValid: true };
            }

            const sectorsCount = sectorsControl.getGrid()?.getTotalRecordCount() || 0;

            if (sectorsCount === 0) {
                const errorMsg = "At least one 'Sectors Discussed' record must be added if 'None' is selected in Tickers Discussed.";
                formContext.ui.setFormNotification(errorMsg, "ERROR", "sector_discussed_required");
                return { isValid: false, message: errorMsg };
            } else {
                formContext.ui.clearFormNotification("sector_discussed_required");
            }
        } else {
            formContext.ui.clearFormNotification("sector_discussed_required");
        }

        return { isValid: true };

    } catch (error) {
        console.error("Validation failed:", error.message);
        return { isValid: true }; // Don't block on error
    }
}

// ✅ Async OnLoad handler
async function onLoadHandler(executionContext) {
    const formContext = executionContext.getFormContext();

    // 1. Initial validation on load
    await validateSectorsDiscussedRequirement(executionContext);

    // 2. Attach subgrid event listeners to auto-revalidate
    const tickersControl = formContext.getControl("cib_tickers_discussed");
    const sectorsControl = formContext.getControl("cib_sectors_discussed");

    if (tickersControl) {
        tickersControl.addOnLoad(async () => {
            await validateSectorsDiscussedRequirement(executionContext);
        });
    }

    if (sectorsControl) {
        sectorsControl.addOnLoad(async () => {
            await validateSectorsDiscussedRequirement(executionContext);
        });
    }
}

// ✅ Async OnSave handler
async function onSaveHandler(executionContext) {
    const result = await validateSectorsDiscussedRequirement(executionContext);
    if (!result.isValid) {
        executionContext.getEventArgs().preventDefault();
    }
}
