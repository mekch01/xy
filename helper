async function validateSectorsAndWireEvents(executionContext, fromSave = false) {
    const formContext = executionContext.getFormContext();
    const activityType = formContext.getAttribute("cib_activity_type")?.getValue();
    const phoneId = formContext.data.entity.getId()?.replace(/[{}]/g, "");

    // Skip validation if not Equity or ID missing
    if (!phoneId || activityType !== Cib.PhoneCallConstant.CIB_ACTIVITY_TYPE_EQUITY) {
        formContext.ui.clearFormNotification("sector_discussed_required");
        return true;
    }

    try {
        // ✅ Fetch related tickers discussed using FetchXML
        const fetchXml = CibHelper.buildFetchXml(
            "cib_tickers_discussed",
            ["cib_reference_master_ticker_id"],
            [{ attribute: "cib_phone_call", operator: "eq", value: phoneId }]
        );
        const result = await Xrm.WebApi.retrieveMultipleRecords(
            "cib_tickers_discussed",
            "?fetchXml=" + encodeURIComponent(fetchXml)
        );

        // ✅ Check if any ticker has value "None"
        const hasNoneTicker = result.entities.some(entity =>
            (entity["cib_reference_master_ticker_id@OData.Community.Display.V1.FormattedValue"] || "")
                .toLowerCase() === "none"
        );

        if (hasNoneTicker) {
            const sectorsControl = formContext.getControl("Subgrid_new_2");
            const sectorsCount = sectorsControl?.getGrid()?.getTotalRecordCount() || 0;

            if (sectorsCount === 0) {
                const msg = "At least one 'Sectors Discussed' record must be added if 'None' is selected in Tickers Discussed.";
                formContext.ui.setFormNotification(msg, "ERROR", "sector_discussed_required");

                if (fromSave) {
                    executionContext.getEventArgs().preventDefault();
                }
                return false;
            }
        }

        formContext.ui.clearFormNotification("sector_discussed_required");
        return true;

    } catch (e) {
        console.error("Validation failed:", e);
        // On exception, don't block save
        return true;
    }
}

// ✅ OnLoad Handler (Wire subgrid onLoad + initial validation)
async function onLoadHandler(executionContext) {
    const formContext = executionContext.getFormContext();

    // Initial validation
    await validateSectorsAndWireEvents(executionContext);

    // Wire subgrid reloads
    const tickersControl = formContext.getControl("cib_tickers_discussed");
    const sectorsControl = formContext.getControl("cib_sectors_discussed");

    if (tickersControl) {
        tickersControl.addOnLoad(() => validateSectorsAndWireEvents(executionContext));
    }

    if (sectorsControl) {
        sectorsControl.addOnLoad(() => validateSectorsAndWireEvents(executionContext));
    }
}

// ✅ OnSave Handler
async function onSaveHandler(executionContext) {
    await validateSectorsAndWireEvents(executionContext, true);
}
