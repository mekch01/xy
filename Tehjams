// authenticationLogPage.ts
import { Page } from '@playwright/test';

export class AuthenticationLogPage {
  readonly page: Page;

  constructor(page: Page) {
    this.page = page;
  }

  // Required Fields (revised)
  async fillRequiredFields(
    contact: string,
    resultStatus: string,
    comments: string
  ) {
    await this.page.locator('input[aria-label="Contact"]').fill(contact);
    await this.page.locator('input[aria-label="Result\\Status"]').fill(resultStatus);
    await this.page.locator('textarea[aria-label="Comments / Description"]').fill(comments);
  }

  // Categorization Fields
  async fillCategorizationFields(
    category: string,
    type: string,
    detail: string
  ) {
    await this.page.locator('input[aria-label="Category"]').fill(category);
    await this.page.locator('input[aria-label="Type"]').fill(type);
    await this.page.locator('input[aria-label="Detail"]').fill(detail);
  }

  // Authentication Block Fields
  async fillAuthenticationFields(
    origin: string,
    method: string,
    method2: string
  ) {
    await this.page.locator('input[aria-label="Origin"]').fill(origin);
    await this.page.locator('input[aria-label="Method"]').fill(method);
    await this.page.locator('input[aria-label="Method 2"]').fill(method2);
  }

  // Save Button
  async clickSave() {
    await this.page.getByRole('button', { name: 'Save' }).click();
    await this.page.waitForLoadState('domcontentloaded');
  }
}
